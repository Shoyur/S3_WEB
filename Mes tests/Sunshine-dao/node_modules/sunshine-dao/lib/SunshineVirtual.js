"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SunshineVirtual = void 0;
const Sunshine_1 = require("./Sunshine");
const mongodb_memory_server_1 = require("mongodb-memory-server");
/**
 *  Sunshine DAO Virtual Connector
 *
 *  With assistance of mongo-in-memory a virtual MongoDB instance is started
 *  and connected.
 *  All changes are NOT persisted, after application exit, MongoDB instance
 *  is shutdown and data deleted.
 *
 *  @ Michael Hasler
 */
class SunshineVirtual extends Sunshine_1.Sunshine {
    static connectVirtual(port, dbname) {
        return new Promise((resolve, reject) => {
            Sunshine_1.Sunshine.properties = {};
            port = (port) ? port : 8000;
            const mongoServerInstance = new mongodb_memory_server_1.MongoMemoryServer({
                instance: {
                    port: port,
                    dbName: dbname ? dbname : "virtual",
                    storageEngine: "wiredTiger"
                }
            });
            mongoServerInstance.start().then(() => {
                this.connectURI(mongoServerInstance.getUri()).then(res => {
                    resolve(res);
                }).catch(err => {
                    reject(err);
                });
            }).catch(error => {
                reject(error);
            });
        });
    }
}
exports.SunshineVirtual = SunshineVirtual;
