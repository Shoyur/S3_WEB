/**
 *  Sunshine Document
 *
 *  Primitive "Document", as base for "Model" with attributes and
 *  control, behavioral properties
 *
 *  @ Michael Hasler
 */
export declare class Document {
    /**
     * Attributes which will not be saved
     */
    protected __ignoredAttributes: Array<string>;
    /**
     * Attributes which will not be saved
     * nor existing when toObject/toJSON is called
     */
    protected __hiddenAttributes: Array<string>;
    /**
     * Autopopulate the given fields, when model
     * is loaded
     */
    __autoPopulate: boolean;
    /**
     * Save timestamp on every update
     * @param data
     */
    __updateOnSave: string;
    /**
     * Field encryption
     * @param data
     */
    __encryptedFields: Array<string>;
    constructor(data?: any);
    /**
     * Elevate the given JSON data object
     * into Document class, by adopting all attributes
     *
     * @param data
     * @returns {Document}
     * @private
     *
     * @deprecated Please use alternate save parsing
     */
    __elevate(data: any): this;
    /**
     * Read attributes of update document
     * and adopt in target document.
     *
     * Encryption is applied if declared.
     * Datatypes are kept.
     * ObjectId are parsed if possbile.
     *
     * @param target
     * @param update
     * @returns {any}
     */
    private upgradeObject;
    /**
     *
     * @param document
     * @param {boolean} populated: (true) All ignored attributes are available
     * @param {boolean} hidden: (true) All hidden attributes are available
     * @param ignored
     * @returns {any}
     */
    fetchDocument(document: any, populated?: boolean, hidden?: boolean, ignored?: boolean): any;
    protected encryptDocument(doc: any): void;
    protected decryptDocument(doc: any): void;
    private decrypt;
    private encrypt;
    toObject(populated?: boolean): any;
    toJSON(populated?: boolean): any;
}
